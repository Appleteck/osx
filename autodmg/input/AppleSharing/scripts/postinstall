#!/bin/bash

path_root="$3"; if [ -z "${path_root}" ] || [ "${path_root}" = "/" ]; then path_root=""; fi # fix //

vnc_hash=""

#
# ard agent always
#
# LaunchAgent that always configures Apple Remote Desktop client to require the end user to accept an incoming connection
#
defaults write "${path_root}/Library/LaunchAgents/com.org.ard.plist" KeepAlive -bool FALSE
defaults write "${path_root}/Library/LaunchAgents/com.org.ard.plist" Label "com.org.ard"
defaults write "${path_root}/Library/LaunchAgents/com.org.ard.plist" ProgramArguments -array "/bin/sh" "-c" "/System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -activate -configure -allowAccessFor -allUsers -access -on -privs -GenerateReports -ChangeSettings -SendFiles -TextMessages -DeleteFiles -clientopts -setvnclegacy -vnclegacy no -setreqperm -reqperm yes -setmenuextra -menuextra yes -restart -agent"
defaults write "${path_root}/Library/LaunchAgents/com.org.ard.plist" RunAtLoad -bool TRUE
# debug
#defaults write "${path_root}/Library/LaunchAgents/com.org.ard.plist" StandardErrorPath -string "/tmp/com.org.ard.stderr.log"
#defaults write "${path_root}/Library/LaunchAgents/com.org.ard.plist" StandardOutPath -string "/tmp/com.org.ard.stdout.log"
defaults write "${path_root}/Library/LaunchAgents/com.org.ard.plist" ThrottleInterval -int 900
[[ -e "${path_root}/Library/LaunchAgents/com.org.ard.plist" ]] && chown root:wheel "${path_root}/Library/LaunchAgents/com.org.ard.plist"
[[ -e "${path_root}/Library/LaunchAgents/com.org.ard.plist" ]] && chmod 644 "${path_root}/Library/LaunchAgents/com.org.ard.plist"

#
# ssh daemon always
#
# LaunchDaemon that always configures ssh access
#
defaults write "${path_root}/Library/LaunchDaemons/com.org.ssh.plist" KeepAlive -bool TRUE
defaults write "${path_root}/Library/LaunchDaemons/com.org.ssh.plist" Label "com.org.ssh"
defaults write "${path_root}/Library/LaunchDaemons/com.org.ssh.plist" ProgramArguments -array "/bin/sh" "-c" "\"sleep 10; systemsetup -setremotelogin on\""
defaults write "${path_root}/Library/LaunchDaemons/com.org.ssh.plist" RunAtLoad -bool TRUE
# debug
# defaults write "${path_root}/Library/LaunchDaemons/com.org.ssh.plist" StandardErrorPath -string "/tmp/com.org.ssh.stderr.log"
# defaults write "${path_root}/Library/LaunchDaemons/com.org.ssh.plist" StandardOutPath -string "/tmp/com.org.ssh.stdout.log"
defaults write "${path_root}/Library/LaunchDaemons/com.org.ssh.plist" ThrottleInterval -int 900
[[ -e "${path_root}/Library/LaunchDaemons/com.org.ssh.plist" ]] && chown root:wheel "${path_root}/Library/LaunchDaemons/com.org.ssh.plist"
[[ -e "${path_root}/Library/LaunchDaemons/com.org.ssh.plist" ]] && chmod 644 "${path_root}/Library/LaunchDaemons/com.org.ssh.plist"

#
# the motd banner
#
motd_banner="Unauthorised access to these resources is prohibited."
echo " " > "${path_root}/etc/motd"
echo "${motd_banner}" >> "${path_root}/etc/motd"
echo " " >> "${path_root}/etc/motd"

#
# the vnc password
#
echo "${vnc_hash}" > "${path_root}/Library/Preferences/com.apple.VNCSettings.txt"
[[ -e "${path_root}/Library/Preferences/com.apple.VNCSettings.txt" ]] && chown -R root:wheel "${path_root}/Library/Preferences/com.apple.VNCSettings.txt"
[[ -e "${path_root}/Library/Preferences/com.apple.VNCSettings.txt" ]] && chmod -R 600 "${path_root}/Library/Preferences/com.apple.VNCSettings.txt"

#
# always new existing session control
#
defaults write "${path_root}/Library/Preferences/com.apple.RemoteManagement.plist" VNCAlwaysStartOnConsole -bool true

exit 0
